{"version":3,"sources":["styles.ts","App.tsx","utils.ts","reportWebVitals.ts","index.tsx"],"names":["Content","styled","div","Section","Right","App","useState","mintStatus","setMintStatus","currentTestBalance","currentEtherBalance","buyAmount","setBuyAmount","receiveAddress","setReceiveAddress","receiveAmount","setReceiveAmount","useEffect","a","window","ethereum","provider","ethers","providers","Web3Provider","contract","Contract","TestTokenArtifacts","abi","name","console","log","fetchData","Typography","Button","variant","disableElevation","onClick","TextField","id","type","label","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAEaA,EAAUC,IAAOC,IAAV,uEAKPC,EAAUF,IAAOC,IAAV,+HAOPE,EAAQH,IAAOC,IAAV,sE,OCgIHG,MAlIf,WAAgB,IAAD,EACuBC,oBAAS,GADhC,mBACNC,EADM,KACMC,EADN,OAEuCF,mBAAS,GAFhD,mBAENG,EAFM,aAGyCH,mBAAS,IAHlD,mBAGNI,EAHM,aAIqBJ,mBAAS,IAJ9B,mBAINK,EAJM,KAIKC,EAJL,OAK+BN,mBAAS,IALxC,mBAKNO,EALM,KAKUC,EALV,OAM6BR,mBAAS,GANtC,mBAMNS,EANM,KAMSC,EANT,KAoDb,OAjBAC,qBAAU,YACO,uCAAG,gCAAAC,EAAA,yDACe,qBAApBC,OAAOC,SADF,wBAERC,EAAW,IAAIC,IAAOC,UAAUC,aAAaL,OAAOC,UACpDK,EAAW,IAAIH,IAAOI,SC/CN,6CD+C+BC,EAAmBC,IAAKP,GAH/D,kBAKOI,EAASI,OALhB,OAKNA,EALM,OAMZC,QAAQC,IAAIF,GANA,kDAQZC,QAAQC,IAAR,wBARY,0DAAH,qDAafC,MAIA,eAAChC,EAAD,WACE,cAACG,EAAD,UACE,eAAC8B,EAAA,EAAD,gCAA+B1B,EAAa,OAAS,aAEvD,cAACH,EAAD,UACE,cAAC8B,EAAA,EAAD,CACEC,QAAQ,YACRC,kBAAgB,EAChBC,QA1CmB,WACzB7B,GAAeD,IAsCX,SAKGA,EAAa,YAAc,iBAIhC,eAACJ,EAAD,WACE,cAAC8B,EAAA,EAAD,4CACA,eAACA,EAAA,EAAD,WAAaxB,EAAb,IChFoB,YDmFtB,eAACN,EAAD,WACE,cAAC8B,EAAA,EAAD,uCACA,eAACA,EAAA,EAAD,WAAavB,EAAb,aAGF,eAACP,EAAD,WACE,cAAC8B,EAAA,EAAD,2BACA,cAACK,EAAA,EAAD,CACEC,GAAG,iBACHC,KAAK,SACLC,MAAM,iBACNN,QAAQ,WACRO,SAAU,SAACC,GAAD,OAAO/B,GAAc+B,EAAEC,OAAOC,aAG5C,cAACzC,EAAD,UACE,cAAC8B,EAAA,EAAD,CACEC,QAAQ,YACRC,kBAAgB,EAChBC,QAnEY,WAClBP,QAAQC,IAAIpB,IA+DR,0BASF,eAACR,EAAD,WACE,cAAC8B,EAAA,EAAD,gCACA,cAACK,EAAA,EAAD,CACEC,GAAG,iBACHE,MAAM,kBACNN,QAAQ,WACRO,SAAU,SAACC,GAAD,OAAO7B,EAAkB6B,EAAEC,OAAOC,aAIhD,eAAC1C,EAAD,WACE,cAAC8B,EAAA,EAAD,+BACA,cAACK,EAAA,EAAD,CACEC,GAAG,iBACHC,KAAK,SACLC,MAAM,iBACNN,QAAQ,WACRO,SAAU,SAACC,GAAD,OAAO3B,GAAkB2B,EAAEC,OAAOC,aAGhD,cAACzC,EAAD,UACE,cAAC8B,EAAA,EAAD,CACEC,QAAQ,YACRC,kBAAgB,EAChBC,QA5Fa,WACnBP,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIhB,IAuFR,+BEpHO+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.26d95c96.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Content = styled.div`\n  max-width: 400px;\n  margin: 50px auto;\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  padding: 10px 0;\n`;\n\nexport const Right = styled.div`\n  text-align: right;\n  padding: 10px 0;\n`;","import React, { useEffect, useState } from 'react';\nimport { Button, Typography, TextField } from \"@mui/material\";\nimport { ethers } from \"ethers\";\nimport TestTokenArtifacts from \"artifacts/contracts/TestToken.sol/TestToken.json\";\nimport { Content, Section, Right } from './styles';\nimport { TOKEN_SYMBOL, DEPLOY_ADDRESS } from \"utils\";\n\ndeclare global {\n  interface Window {\n    ethereum: ethers.providers.ExternalProvider;\n  }\n}\nfunction App() {\n  const [mintStatus, setMintStatus] = useState(false); // Status to set sales permission\n  const [currentTestBalance, setCurrentTestBalance] = useState(0); // Current Test Token's Balance\n  const [currentEtherBalance, setCurrentEtherBalance] = useState(0); // Current Ether's Balance\n  const [buyAmount, setBuyAmount] = useState(0); // Amount of tokens to buy\n  const [receiveAddress, setReceiveAddress] = useState(\"\"); // Address to send tokens\n  const [receiveAmount, setReceiveAmount] = useState(0); // Amount of tokens to send\n\n  // function for connect to Metamask\n  const requestAccount = async () => {\n    if (window.ethereum?.request)\n      return window.ethereum.request({ method: \"eth_requestAccounts\" });\n\n    throw new Error(\n      \"Missing install Metamask. Please access https://metamask.io/ to install extension on your browser\"\n    );\n  }\n\n  // function for change the mint permission\n  const onChangeMintStatus = () => {\n    setMintStatus(!mintStatus);\n  };\n\n  // function for buy tokens\n  const onBuyTokens = () => {\n    console.log(buyAmount);\n  };\n\n  // functioin for send tokens\n  const onSendTokens = () => {\n    console.log(receiveAddress);\n    console.log(receiveAmount);\n  };\n\n  // function for get current status\n  useEffect(() => {\n    const fetchData = async () => {\n      if (typeof window.ethereum !== \"undefined\") {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const contract = new ethers.Contract(DEPLOY_ADDRESS, TestTokenArtifacts.abi, provider);\n        try {\n          const name = await contract.name();\n          console.log(name);\n        } catch (err) {\n          console.log(`Error: ${err}`);\n        }\n      }\n    }\n\n    fetchData();\n  });\n\n  return (\n    <Content>\n      <Section>\n        <Typography>Sales Permission: {mintStatus ? \"True\" : \"False\"}</Typography>\n      </Section>\n      <Right>\n        <Button\n          variant=\"contained\"\n          disableElevation\n          onClick={onChangeMintStatus}\n        >\n          {mintStatus ? \"Stop Sale\" : \"Start Sale\"}\n        </Button>\n      </Right>\n      \n      <Section>\n        <Typography>Current Test Token's Balance:</Typography>\n        <Typography>{currentTestBalance} {TOKEN_SYMBOL}</Typography>\n      </Section>\n\n      <Section>\n        <Typography>Current Ether's Balance:</Typography>\n        <Typography>{currentEtherBalance} ETH</Typography>\n      </Section>\n\n      <Section>\n        <Typography>Buy Tokens: </Typography>\n        <TextField\n          id=\"standard-basic\"\n          type=\"number\"\n          label=\"Token's Amount\"\n          variant=\"standard\"\n          onChange={(e) => setBuyAmount(+e.target.value)}\n        />\n      </Section>\n      <Right>\n        <Button\n          variant=\"contained\"\n          disableElevation\n          onClick={onBuyTokens}\n        >\n          Buy Tokens\n        </Button>\n      </Right>\n\n      <Section>\n        <Typography>Receive Address: </Typography>\n        <TextField\n          id=\"standard-basic\"\n          label=\"Receive Address\"\n          variant=\"standard\"\n          onChange={(e) => setReceiveAddress(e.target.value)}\n        />\n      </Section>\n\n      <Section>\n        <Typography>Receive Amount: </Typography>\n        <TextField\n          id=\"standard-basic\"\n          type=\"number\"\n          label=\"Receive Amount\"\n          variant=\"standard\"\n          onChange={(e) => setReceiveAmount(+e.target.value)}\n        />\n      </Section>\n      <Right>\n        <Button\n          variant=\"contained\"\n          disableElevation\n          onClick={onSendTokens}\n        >\n          Send Tokens\n        </Button>\n      </Right>\n    </Content>\n  );\n}\n\nexport default App;\n","export const TOKEN_NAME = \"ERC20 Test Token\";\nexport const TOKEN_SYMBOL = \"ETT\";\nexport const SWAP_RATE = 100;\n// export const DEPLOY_ADDRESS = \"0x5398f3dB118E6268BD42135e167BF9ad045D4752\";\nexport const DEPLOY_ADDRESS = \"0xa513E6E4b8f2a923D98304ec87F64353C4D5C853\"","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}